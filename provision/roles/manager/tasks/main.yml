---
- name: get our hostname
  command: hostname
  changed_when: False
  register: hostname_stat

- name: set our hostname in memory to smisc
  hostname: name={{ hostname }}
  when: hostname_stat.stdout.find("{{ hostname }}") == -1

- name: set our hostname on startup to smisc
  replace: dest=/etc/hostname regexp='(?!{{ fqdn }})' replace='{{ fqdn }}'
  when: hostname_stat.stdout.find("{{ hostname }}") == -1

- name: set our FQDN
  lineinfile: create=yes state=present line="127.0.0.1 {{ fqdn }} {{ hostname }} smisc.{{ domain }} smisc-sql.{{ domain }}" dest=/etc/hosts
  
- name: ensure local directory structure is set up
  command: mkdir -p "{{ item }}" creates={{ item }}
  with_items:
    - /var/local/log 
    - /var/local/run
    - /var/local/backups
    - /var/local/backups/postgresql
    - /usr/local/share/nginx
    - /usr/local/src/{{ domain }}/sql
    - /usr/local/src/{{ domain }}/dashboard

- name: add base repositories
  apt_repository: repo='{{item}}' state=present
  with_items:
    - deb http://http.debian.net/debian wheezy main contrib non-free
    - deb-src http://http.debian.net/debian wheezy main contrib non-free

- name: install base packages
  apt: name={{ item }} state=latest
  with_items: 
    - ntp
    - vim
    - python3-pip
    - python-pip
    - build-essential
    - python-dev
    - python3-dev
    - monit
    - libpq-dev
    - htop
    - postgresql
    - php5-fpm
    - php5-cli
    - php5-pgsql
    - php-pear
    - nginx
    - redis-server
    - php5-dev
    - php5-mcrypt
    - rsync

- name: install PHP PEAR modules
  command: pecl install redis
  ignore_errors: yes

- name: check if composer is installed
  stat: path=/usr/local/bin/composer
  register: composer_stat

- name: install composer
  when: False == composer_stat.stat.exists
  include: install_composer.yml

- name: Install Python modules for 3-2
  pip: name={{ item }} executable=pip-3.2
  with_items:
    - TwitterAPI
    - redis
    - psycopg2
    - boto

- name: Install Python modules for 2-7
  pip: name={{ item }} executable=pip-2.7
  with_items:
    - psycopg2
    - boto

- name: Synchronize nginx configuration
  synchronize: src=config/nginx/ dest=/etc/nginx/ delete=yes rsync_path="sudo rsync"
  notify: 
    - reload nginx
  tags:
    - nginx

- name: Increase stock SHMMAX
  sysctl: name=kernel.shmmax value=8589934592 sysctl_set=yes

- name: Increase stock SHMALL
  sysctl: name=kernel.shmall value=2097152 sysctl_set=yes

- name: Synchronize PostgreSQL configuration
  synchronize: src=config/postgresql/ dest=/etc/postgresql/9.1/main/ rsync_path="sudo rsync"
  notify:
    - reload postgresql

- name: Synchronize redis configuration
  synchronize: src=config/redis/ dest=/etc/redis/ rsync_path="sudo rsync"
  notify:
    - reload redis

- name: Synchronize backup script
  synchronize: src=scripts/backup.py dest=/usr/local/bin/smisc-backup.py rsync_path="sudo rsync"
  tags:
    - smisc

- name: Synchronize init scripst
  synchronize: src=config/initscripts/ dest=/etc/init.d/ delete=no rsync_path="sudo rsync"
  tags:
    - smisc

# this changes every time. broken? archivce=no maybe it is changing permissions
- name: Synchronize php-fpm config
  synchronize: src=config/php/{{ item }} dest=/etc/php5/fpm/{{ item }} archive=no rsync_path="sudo rsync"
  with_items:
    - pool.d/www.conf
    - php.ini
    - php-fpm.conf
  notify:
    - reload php

- name: Synchronize monit scripts
  synchronize: src=config/monit/ dest=/etc/monit/ group=no owner=no perms=no recursive=yes rsync_path="sudo rsync"
  notify:
     - reload monit
  tags:
    - monit

- name: Deploy smisc code
  synchronize: src=src/ dest=/usr/local/src/smisc/ rsync_path="sudo rsync"
  tags: 
    - smisc
    - hot

- name: Synchronize phpPgAdmin
  synchronize: src=pgsql/ dest=/usr/local/src/{{ domain }}/sql group=no owner=no perms=no recursive=yes delete=yes rsync_path="sudo rsync"
  tags:
    - smisc

- name: Synchronize dashboard code
  synchronize: src=dashboard/ dest=/usr/local/src/{{ domain }}/dashboard group=no owner=no perms=no recursive=yes delete=yes rsync_path="sudo rsync"
  tags:
    - smisc
    - hot

- name: Add the pacsocial user to postgres
  sudo_user: postgres
  postgresql_user: name=pacsocial state=present password="{{ pacsocial_password }}"
  tags:
    - postgresql

- name: Add the dashboard user to postgres
  sudo_user: postgres
  postgresql_user: name=dashboard state=present password="{{ dashboard_password }}"
  tags:
    - postgresql

- name: Add the pacsocial database to postgres
  sudo_user: postgres
  postgresql_db: name=pacsocial state=present owner=pacsocial
  tags:
    - postgresql

- name: Add the dashboard database to postgres
  sudo_user: postgres
  postgresql_db: name=dashboard state=present owner=dashboard
  tags:
    - postgresql

- name: Ensure that the dashboard has read access to pacsocial data
  sudo_user: postgres
  command: psql -c 'grant select on all tables in schema "public" to dashboard' pacsocial postgres 

- name: Ensure that the pacsocial user has read access to dashboard data
  sudo_user: postgres
  command: psql -c 'grant select on all tables in schema "public" to pacsocial' dashboard postgres 

- name: Deploy smisc configuration
  synchronize: src=config/smisc.ini dest=/usr/local/share/smisc.ini rsync_path="sudo rsync"
  tags: 
    - smisc
    - hot

- name: generate keys
  include: generate_keys.yml

- name: Ensure files have the proper mode and owner
  file: path={{ item.src }} owner={{ item.owner | default("root") }} mode={{ item.mode | default(0700) }}
  with_items:
    - { src: "/etc/monit/monitrc" }
    - { src: "/usr/local/share/nginx/{{ fqdn }}.key", owner: "www-data", mode: 400 }
    - { src: "/usr/local/share/nginx/smisc-sql.{{ domain }}.crt", owner: "www-data", mode: 400 }
    - { src: "/usr/local/share/nginx/smisc.{{ domain }}.crt", owner: "www-data", mode: 400 }
    - { src: "/usr/local/share/nginx/smisc.{{ domain }}.crt", owner: "www-data", mode: 400 }
  tags:
    - monit
    - smisc

- name: Ensure directories have the proper mode and owner
  file: path={{ item.src }} owner={{ item.owner | default("root") }} mode={{ item.mode | default(0700) }} recurse=yes state=directory
  with_items:
    - { src: "/usr/local/src/{{ domain }}/dashboard/app/storage", owner: "www-data", mode: 775 }
  tags:
    - smisc

- name: Core services are running
  service: name={{ item }} state=started
  with_items:
    - postgresql
    - nginx
    - php5-fpm
    - monit
  tags:
    - smisc
    - nginx
    - php
    - monit
    - postgresql
    - hot

- name: turn on the follower scraper job
  cron: name="follower scraper" state=present minute="*" hour="*" day="*" month="*" job="python3 /usr/local/src/smisc/app.py followers"

- name: turn on the competition tweets scraper scraper job
  cron: name="competition tweets scraper" state=present minute="*" hour="*" day="*" month="*" job="python3 /usr/local/src/smisc/app.py competition-tweets"

- name: turn on the info scraper job
  cron: name="info scraper" state=present minute="0,30" hour="*" day="*" month="*" job="python3 /usr/local/src/smisc/app.py info"

#- name: turn on the daily backup job
#  cron: name="hourly backups" state=present minute="0" hour="0" day="*" month="*" job="python3 /usr/local/bin/smisc-backup.py"
